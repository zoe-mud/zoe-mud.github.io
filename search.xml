<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决Ubuntu报错E:Unable to locate package yum</title>
      <link href="/2023/08/04/%E8%A7%A3%E5%86%B3Ubuntu%E6%8A%A5%E9%94%99E-Unable-to-locate-package-yum/"/>
      <url>/2023/08/04/%E8%A7%A3%E5%86%B3Ubuntu%E6%8A%A5%E9%94%99E-Unable-to-locate-package-yum/</url>
      
        <content type="html"><![CDATA[<h1 id="1、报错原因"><a href="#1、报错原因" class="headerlink" title="1、报错原因"></a>1、报错原因</h1><p>本来今天开开心心学Linux，结果碰到要安装SSH的指令：</p><pre><code class="bash">$ yum install openssh-server</code></pre><p>我在Ubuntu上执行命令后报错：<em>E</em>: Unable to locate package yum</p><h1 id="2、解决办法"><a href="#2、解决办法" class="headerlink" title="2、解决办法"></a>2、解决办法</h1><p>Ubuntu的包管理工具是apt-get，所以不必再安装yum。如果要安装其他包需要使用apt-get命令。</p><p>现在的我还不知道问题出现在哪里，只能上网搜索，最简单的就是update。</p><p>最后解决办法如下：</p><p>1、备份sources.list文件</p><pre><code class="bash">$ sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</code></pre><p>2、更换源</p><ul><li>编辑文件</li></ul><pre><code class="bash">$ sudo vim /etc/apt/sources.list</code></pre><ul><li>将下面网站文本复制粘贴并覆盖，粘贴的命令是 shift + insert。记得选择相应的Linux版本。查看Ubuntu版本的指令如下：</li></ul><pre><code class="bash">$ lsb_release -a</code></pre><ul><li><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">清华镜像源</a></p></li><li><p>在第一行添加镜像源如下：</p></li><li><p>更新源</p></li><li><p>安装yum</p></li><li><p>如果出现下列提示：The following packages have unmet dependencies</p><p>那就按提示逐一安装依赖</p><pre><code class="bash">$ sudo apt-get install python-sqlitecachec$ sudo apt-get install python-urlgrabber</code></pre></li><li><p>如果出现类似以下提示：</p><p>下列软件包有未满足的依赖关系：</p><p>python3-yaml : Breaks: libpython-stdlib (&lt; 2.7.18) but 2.7.5-5ubuntu3 is to be installed<br>                     Breaks: python-minimal (&lt; 2.7.18) but 2.7.5-5ubuntu3 is to be installed<br>E: Error, pkgProblemResolver::Resolve generated breaks, this may be caused by held packages.</p><p><strong>分析原因：</strong></p><p>根据上述错误信息，安装yum时出现了依赖关系问题，其中python3-yaml的安装会破坏已安装的libpython-stdlib和python-minimal软件包，因为它们的版本过低。</p><p><strong>可以通过以下方法解决：</strong></p><p>1）更新系统：使用以下命令更新系统软件包：</p><pre><code class="bash">$ sudo apt-get update$ sudo apt-get upgrade</code></pre><p>更新完毕后，尝试重新安装yum软件包</p><p>2）升级软件包：如果更新系统后仍然无法解决问题，可以尝试升级python-minimal和libpython-stdlib软件包</p><pre><code class="bash">$ sudo apt-get install python-minimal libpython-stdlib</code></pre><p>更新完毕后，尝试重新安装yum软件包</p><p>3）手动安装依赖：如果升级软件包后仍然无法解决问题，可以尝试手动安装python3-yaml软件包：</p><pre><code class="bash">$ sudo apt-get install python3-six python3-yaml</code></pre><p>安装完毕后，尝试重新安装yum软件包。</p><p>如果以上方法都不能解决问题，可以尝试卸载已安装的python-minimal和libpython-stdlib软件包，并重新安装它们的较新版本。如果仍然无法解决问题，可以考虑使用其他软件包管理工具或者手动安装yum。</p></li></ul><p>3、vim编辑</p><p>这里提供vim的一些操作帮助</p><pre><code>Shift + I编辑文档Esc退出编辑:q!    关闭文档:wq!保存文档并关闭</code></pre><p>4、补充一个问题解决</p><p>上面在sources.list文件第一行添加了一句关于ubuntu的，然后在使用sudo apt-get update更新镜像源时，报错：</p><p>W: GPG 错误：<a href="http://archive.ubuntu.com/ubuntu">http://archive.ubuntu.com/ubuntu</a> trusty Release: 由于没有公钥，无法验证下列签名： NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32<br>E: 仓库 “<a href="http://archive.ubuntu.com/ubuntu">http://archive.ubuntu.com/ubuntu</a> trusty Release” 没有数字签名。<br>N: 无法安全地用该源进行更新，所以默认禁用该源。<br>N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。</p><p><strong>解决：从报错提示可看出 没有指定的公钥，执行命令安装指定的公钥即可</strong></p><pre><code class="bash">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32$ sudo apt-get update$ sudo apt-get upgrade </code></pre><p>5、补充一个常识</p><table><thead><tr><th align="left">linux系统基本上分两大类：</th><th>RedHat 系列：</th><th>Debian系列</th></tr></thead><tbody><tr><td align="left">1 RedHat系列：Redhat、Centos、Fedora等</td><td>1 常见的安装包格式 rpm 包，安装rpm包的命令是 “rpm -参数”</td><td>1 常见的安装包格式 deb 包，安装deb包的命令是 “dpkg -参数”</td></tr><tr><td align="left">2 Debian系列：Debian、Ubuntu等</td><td>2 包管理工具 yum</td><td>2 包管理工具 apt-get</td></tr><tr><td align="left"></td><td>3 支持tar包</td><td>3 支持tar包</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Ubuntu报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux远程登录</title>
      <link href="/2023/08/04/Linux%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
      <url>/2023/08/04/Linux%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>Linux 一般作为服务器使用，而服务器一般被我放在实验室，不可能一直在实验室操作 Linux 服务器。</p><p>Linux 系统中是通过 ssh 服务实现的远程登录功能，默认 ssh 服务端口号为 22。</p><p>Window 系统上 Linux 远程登录客户端有 SecureCRT, Putty, SSH Secure Shell 等，本文以 Putty 为例来登录远程服务器。</p><p>Putty 下载地址：<a href="https://www.putty.org/">https://www.putty.org/</a></p><h3 id="解决putty连接超时问题，虚拟机网络连接是net模式下"><a href="#解决putty连接超时问题，虚拟机网络连接是net模式下" class="headerlink" title="解决putty连接超时问题，虚拟机网络连接是net模式下"></a>解决<a href="https://so.csdn.net/so/search?q=putty&spm=1001.2101.3001.7020">putty</a>连接超时问题，虚拟机网络连接是net模式下</h3><p>用putty远程连接终端，使用过程中出现的连接超时的问题，error：connection timed out.</p><h4 id="1-问题出现"><a href="#1-问题出现" class="headerlink" title="1.问题出现"></a>1.问题出现</h4><p>打开putty，在HostName下填写你的Liunx系统的ip，点击open，出现连接超时的问题，但是仔细检查发现我们的liunx系统的ip没有写错。解决步骤如下：</p><h5 id="（1）检查一下自己的主机和虚拟机是否能上网，不能上网，自己解决一下网络连接的问题，建议net模式下上网，可以参考一下这篇博客设置net模式下上网"><a href="#（1）检查一下自己的主机和虚拟机是否能上网，不能上网，自己解决一下网络连接的问题，建议net模式下上网，可以参考一下这篇博客设置net模式下上网" class="headerlink" title="（1）检查一下自己的主机和虚拟机是否能上网，不能上网，自己解决一下网络连接的问题，建议net模式下上网，可以参考一下这篇博客设置net模式下上网"></a>（1）检查一下自己的主机和虚拟机是否能上网，不能上网，自己解决一下网络连接的问题，建议net模式下上网，可以参考一下这篇博客<a href="https://www.cnblogs.com/ddzzhh/p/8909591.html">设置net模式下上网</a></h5><h5 id="（2）如果自己的主机和虚拟机都能上网，可以看看ssh服务是否打开，一般虚拟机默认都是打开的，如果不放心可以自己看看。"><a href="#（2）如果自己的主机和虚拟机都能上网，可以看看ssh服务是否打开，一般虚拟机默认都是打开的，如果不放心可以自己看看。" class="headerlink" title="（2）如果自己的主机和虚拟机都能上网，可以看看ssh服务是否打开，一般虚拟机默认都是打开的，如果不放心可以自己看看。"></a>（2）如果自己的主机和虚拟机都能上网，可以看看ssh服务是否打开，一般虚拟机默认都是打开的，如果不放心可以自己看看。</h5><h6 id="a）使用root用户登录，如果为非root用户则执行以下命令切换为root用户。"><a href="#a）使用root用户登录，如果为非root用户则执行以下命令切换为root用户。" class="headerlink" title="a）使用root用户登录，如果为非root用户则执行以下命令切换为root用户。"></a>a）使用root用户登录，如果为非root用户则执行以下命令切换为root用户。</h6><pre><code class="bash">$ su$ su - $ su root$ su - root</code></pre><p>如果切换root用户提示Authentication failure错误，第一种情况可能是root密码输入错误造成的，再仔细检查一遍是否输入错误。</p><p>第二种是刚安装完，没有设置root用户密码导致的，输入以下指令，然后会让你输入当前用户密码，输入完后再输入root用户密码就可以了。</p><pre><code class="bash">$ sudo passwd</code></pre><p>root切回到普通用户模式的指令如下：</p><pre><code class="bash">$ su lmj</code></pre><h6 id="b）查看SSH是否安装（检查是否装了SSH包）。"><a href="#b）查看SSH是否安装（检查是否装了SSH包）。" class="headerlink" title="b）查看SSH是否安装（检查是否装了SSH包）。"></a>b）查看SSH是否安装（检查是否装了SSH包）。</h6><h6 id="输入命令："><a href="#输入命令：" class="headerlink" title="输入命令："></a>输入命令：</h6><pre><code class="bash">$ rpm -qa | grep ssh</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础</title>
      <link href="/2023/08/03/Linux%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/08/03/Linux%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-系统"><a href="#Linux-系统" class="headerlink" title="Linux 系统"></a>Linux 系统</h1><h2 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h2><ul><li><p>内核的引导。</p></li><li><p>运行 init。</p></li><li><p>系统初始化。</p></li><li><p>建立终端 。</p></li><li><p>用户登录系统。</p><h3 id="内核的引导"><a href="#内核的引导" class="headerlink" title="内核的引导"></a>内核的引导</h3><p>当计算机打开电源后，首先是BIOS开机自检，按照BIOS中设置的启动设备（通常是硬盘）来启动。</p><p>操作系统接管硬件以后，首先读入 &#x2F;boot 目录下的内核文件。</p><h3 id="运行init"><a href="#运行init" class="headerlink" title="运行init"></a>运行init</h3><p>init 进程是系统所有进程的起点，你可以把它比拟成系统所有进程的老祖宗，没有这个进程，系统中任何进程都不会启动。</p><p>init 程序首先是需要读取配置文件 &#x2F;etc&#x2F;inittab</p><h4 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h4><p>许多程序需要开机启动。它们在Windows叫做”服务”（service），在Linux就叫做”<strong>守护进程</strong>“（daemon）。</p><p>init进程的一大任务，就是去运行这些开机启动的程序。</p><p>但是，不同的场合需要启动不同的程序，比如用作服务器时，需要启动Apache，用作桌面就不需要。</p><p>Linux允许为不同的场合，分配不同的开机启动程序，这就叫做”运行级别”（runlevel）。也就是说，启动时根据”运行级别”，确定要运行哪些程序。</p><p>Linux系统有<strong>7</strong>个运行级别(runlevel)：</p><ul><li>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</li><li>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登录</li><li>运行级别2：多用户状态(没有NFS)</li><li>运行级别3：完全的多用户状态(有NFS)，登录后进入控制台命令行模式</li><li>运行级别4：系统未使用，保留</li><li>运行级别5：X11控制台，登录后进入图形GUI模式</li><li>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</li></ul><h3 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h3><p>在init的配置文件中有这么一行： si::sysinit:&#x2F;etc&#x2F;rc.d&#x2F;rc.sysinit，它调用执行了&#x2F;etc&#x2F;rc.d&#x2F;rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本。</p><p>它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务。</p><p>l5:5:wait:&#x2F;etc&#x2F;rc.d&#x2F;rc 5</p><p> 这一行表示以5为参数运行&#x2F;etc&#x2F;rc.d&#x2F;rc，&#x2F;etc&#x2F;rc.d&#x2F;rc是一个Shell脚本，它接受5作为参数，去执行&#x2F;etc&#x2F;rc.d&#x2F;rc5.d&#x2F;目录下的所有的rc启动脚本，&#x2F;etc&#x2F;rc.d&#x2F;rc5.d&#x2F;目录中的这些启动脚本实际上都是一些连接文件，而不是真正的rc启动脚本，真正的rc启动脚本实际上都是放在&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;目录下。</p><p>而这些rc启动脚本有着类似的用法，它们一般能接受start、stop、restart、status等参数。</p><p>&#x2F;etc&#x2F;rc.d&#x2F;rc5.d&#x2F;中的rc启动脚本通常是K或S开头的连接文件，对于以 S 开头的启动脚本，将以start参数来运行。</p><p>而如果发现存在相应的脚本也存在K打头的连接，而且已经处于运行态了(以&#x2F;var&#x2F;lock&#x2F;subsys&#x2F;下的文件作为标志)，则将首先以stop为参数停止这些已经启动了的守护进程，然后再重新运行。</p><p>这样做是为了保证是当init改变运行级别时，所有相关的守护进程都将重启。</p><p>至于在每个运行级中将运行哪些守护进程，用户可以通过chkconfig或setup中的”System Services”来自行设定。</p><h3 id="建立终端"><a href="#建立终端" class="headerlink" title="建立终端"></a>建立终端</h3><p>rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。</p><p>init接下来会打开6个终端，以便用户登录系统。在inittab中的以下6行就是定义了6个终端。</p><pre><code class="systemverilog">1:2345:respawn:/sbin/mingetty tty12:2345:respawn:/sbin/mingetty tty23:2345:respawn:/sbin/mingetty tty34:2345:respawn:/sbin/mingetty tty45:2345:respawn:/sbin/mingetty tty56:2345:respawn:/sbin/mingetty tty6</code></pre><p>从上面可以看出在2、3、4、5的运行级别中都将以respawn方式运行mingetty程序，mingetty程序能打开终端、设置模式。</p><p>同时它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验证用户的身份。</p><h3 id="用户登录系统"><a href="#用户登录系统" class="headerlink" title="用户登录系统"></a>用户登录系统</h3><p>一般来说，用户的登录方式有三种：</p><ul><li><p>（1）命令行登录</p></li><li><p>（2）ssh登录</p></li><li><p>（3）图形界面登录</p><p>对于运行级别为5的图形方式用户来说，他们的登录是通过一个图形化的登录界面。登录成功后可以直接进入 KDE、Gnome 等窗口管理器。</p><p>而本文主要讲的还是文本方式登录的情况：当我们看到mingetty的登录界面时，我们就可以输入用户名和密码来登录系统了。</p><p>Linux 的账号验证程序是 login，login 会接收 mingetty 传来的用户名作为用户名参数。</p><p>然后 login 会对用户名进行分析：如果用户名不是 root，且存在 &#x2F;etc&#x2F;nologin 文件，login 将输出 nologin 文件的内容，然后退出。</p><p>这通常用来系统维护时防止非root用户登录。只有&#x2F;etc&#x2F;securetty中登记了的终端才允许 root 用户登录，如果不存在这个文件，则 root 用户可以在任何终端上登录。</p><p>&#x2F;etc&#x2F;usertty文件用于对用户作出附加访问限制，如果不存在这个文件，则没有其他限制。</p></li></ul><h3 id="图形模式与文字模式的切换方式"><a href="#图形模式与文字模式的切换方式" class="headerlink" title="图形模式与文字模式的切换方式"></a>图形模式与文字模式的切换方式</h3><p>Linux预设提供了六个命令窗口终端机让我们来登录。</p><p>默认我们登录的就是第一个窗口，也就是tty1，这个六个窗口分别为tty1,tty2 … tty6，你可以按下Ctrl + Alt + F1 ~ F6 来切换它们。</p><p>如果你安装了图形界面，默认情况下是进入图形界面的，此时你就可以按Ctrl + Alt + F1 ~ F6来进入其中一个命令窗口界面。</p><p>当你进入命令窗口界面后再返回图形界面只要按下Ctrl + Alt + F7 就回来了。</p><p>如果你用的vmware 虚拟机，命令窗口切换的快捷键为 Alt + Space + F1<del>F6. 如果你在图形界面下请按Alt + Shift + Ctrl + F1</del>F6 切换至命令窗口</p><h3 id="Linux-关机"><a href="#Linux-关机" class="headerlink" title="Linux 关机"></a>Linux 关机</h3><p>在linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。</p><p>正确的关机流程为：sync &gt; shutdown &gt; reboot &gt; halt</p><p>关机指令为：shutdown ，你可以man shutdown 来看一下帮助文档。</p><p>例如你可以运行如下命令关机：</p><pre><code class="bash">sync 将数据由内存同步到硬盘中。shutdown 关机指令，你可以man shutdown 来看一下帮助文档。例如你可以运行如下命令关机：shutdown –h 10 ‘This server will shutdown after 10 mins’ 这个命令告诉大家，计算机将在10分钟后关机，并且会显示在登陆用户的当前屏幕中。shutdown –h now 立马关机shutdown –h 20:25 系统会在今天20:25关机shutdown –h +10 十分钟后关机shutdown –r now 系统立马重启shutdown –r +10 系统十分钟后重启reboot 就是重启，等同于 shutdown –r nowhalt 关闭系统，等同于shutdown –h now 和 poweroff</code></pre><p>最后总结一下，不管是重启系统还是关闭系统，首先要运行 <strong>sync</strong> 命令，把内存中的数据写到磁盘中。</p><p>关机的命令有 <strong>shutdown –h now halt poweroff</strong> 和 <strong>init 0</strong> ,</p><p>重启系统的命令有 <strong>shutdown –r now reboot init 6</strong>。</p></li></ul><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>登录系统后，在当前命令窗口下输入命令：</p><pre><code class="bash">$ ls / </code></pre><p><img src="D:\software\Typora\images\tree-contents.png" alt="tree-contents"></p><p>以下是对这些目录的解释：</p><ul><li><strong>&#x2F;bin</strong>：<br>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</li><li><strong>&#x2F;boot：</strong><br>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</li><li><strong>&#x2F;dev ：</strong><br>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</li><li><strong>&#x2F;etc：</strong><br>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</li><li><strong>&#x2F;home</strong>：<br>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</li><li><strong>&#x2F;lib</strong>：<br>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</li><li><strong>&#x2F;lost+found</strong>：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</li><li><strong>&#x2F;media</strong>：<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</li><li><strong>&#x2F;mnt</strong>：<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 &#x2F;mnt&#x2F; 上，然后进入该目录就可以查看光驱里的内容了。</li><li><strong>&#x2F;opt</strong>：<br>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</li><li><strong>&#x2F;proc</strong>：<br>proc 是 Processes(进程) 的缩写，&#x2F;proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</li></ul><pre><code class="systemverilog">echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></pre><ul><li><p><strong>&#x2F;root</strong>：<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p></li><li><p><strong>&#x2F;sbin</strong>：<br>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</p></li><li><p><strong>&#x2F;selinux</strong>：<br> 这个目录是 Redhat&#x2F;CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p></li><li><p><strong>&#x2F;srv</strong>：<br> 该目录存放一些服务启动之后需要提取的数据。</p></li><li><p><strong>&#x2F;sys</strong>：</p><p>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</p><p>sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。</p><p>该文件系统是内核设备树的一个直观反映。</p><p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p></li><li><p><strong>&#x2F;tmp</strong>：<br>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</p></li><li><p><strong>&#x2F;usr</strong>：<br> usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</p></li><li><p><strong>&#x2F;usr&#x2F;bin：</strong><br>系统用户使用的应用程序。</p></li><li><p><strong>&#x2F;usr&#x2F;sbin：</strong><br>超级用户使用的比较高级的管理程序和系统守护程序。</p></li><li><p><strong>&#x2F;usr&#x2F;src：</strong><br>内核源代码默认的放置目录。</p></li><li><p><strong>&#x2F;var</strong>：<br>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p></li><li><p><strong>&#x2F;run</strong>：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 &#x2F;var&#x2F;run 目录，应该让它指向 run。</p></li></ul><p>在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。</p><p><strong>&#x2F;etc</strong>： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。</p><p><strong>&#x2F;bin, &#x2F;sbin, &#x2F;usr&#x2F;bin, &#x2F;usr&#x2F;sbin</strong>: 这是系统预设的执行文件的放置目录，比如 <strong>ls</strong> 就是在 <strong>&#x2F;bin&#x2F;ls</strong> 目录下的。</p><p>值得提出的是 <strong>&#x2F;bin</strong>、**&#x2F;usr&#x2F;bin** 是给系统用户使用的指令（除 root 外的通用用户），而&#x2F;sbin, &#x2F;usr&#x2F;sbin 则是给 root 使用的指令。</p><p><strong>&#x2F;var</strong>： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 &#x2F;var&#x2F;log 目录下，另外 mail 的预设放置也是在这里。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux上分析二进制文件的10种方法</title>
      <link href="/2023/08/03/%E5%9C%A8Linux%E4%B8%8A%E5%88%86%E6%9E%90%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E7%9A%8410%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>/2023/08/03/%E5%9C%A8Linux%E4%B8%8A%E5%88%86%E6%9E%90%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E7%9A%8410%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>每天都与二进制文件打交道，所说的二进制是指每天运行的可执行文件，从命令行工具到成熟的应用程序都是。</p><p>在这篇文章中，我将介绍一些流行的Linux工具和命令。</p><p>请记住：学习在正确的场合使用正确的工具需要大量的耐心与练习。</p><p>​                                                                                   <strong>File</strong></p><p>它的作用：帮助确定文件类型。</p><p>这将是你进行二进制分析的起点。我们每天都在与文件打交道，并非所有的文件都是可执行类型，除此之外还有各种各样的文件类型。在你开始之前，你需要了解要分析的文件类型。是二进制文件、库文件、ASCII 文本文件、视频文件、图片文件、PDF、数据文件等文件吗？</p><p>file 命令将帮助你确定你所处理的文件类型。</p><pre><code class="bash">$ file /bin/ls/bin/ls: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=94943a89d17e9d373b2794dcb1f7e38c95b66c86, stripped$$ file /etc/passwd/etc/passwd: ASCII text$</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> “binary” </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建我的个人博客</title>
      <link href="/2023/08/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/08/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建个人博客跟从以下几个步骤"><a href="#搭建个人博客跟从以下几个步骤" class="headerlink" title="搭建个人博客跟从以下几个步骤"></a>搭建个人博客跟从以下几个步骤</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
